using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Windows.Media.Media3D;
using System.Xml;

namespace Fawrek.Editor
{
    public class SceneManager
    {
        private static SceneManager sceneManagerInstance;

        private Scene currentScene = new Scene();

        public Scene CurrentScene
        {
            get { return currentScene; }
            set { currentScene = value; OnChange(); }
        }


        public delegate void SceneChangedHandler();
        public event SceneChangedHandler Changed;

        public delegate void SceneClosedHandler();
        public event SceneClosedHandler Closed;

        public SceneManager()
        {
        }


        private void OnChange()
        {
            if (Changed != null)
                Changed();
        }

        private void OnClose()
        {
            if (Closed != null)
                Closed();
        }

        public static SceneManager GetInstance()
        {
            if (sceneManagerInstance != null)
            {
                return sceneManagerInstance;
            }
            else
            {
                sceneManagerInstance = new SceneManager();
                return sceneManagerInstance;
            }
        }

        public void OpenScene(string path)
        {
            if (!File.Exists(path))//new scene ?
            {
                CreateScene(path);
            }
            else
            {
                Scene scene = new Scene();

                scene.Path = path;
                scene.Name = Path.GetFileName(path);

                XmlReader reader = XmlReader.Create(path);

                while (reader.Read())
                {
                    if (reader.NodeType == XmlNodeType.Element && reader.Name == "MODELS")
                    {
                        while (reader.NodeType != XmlNodeType.EndElement)
                        {
                            reader.Read();
                            if (reader.Name == "MODEL")
                            {
                                Model model = new Model();
                                
                                model.Id = int.Parse(reader.GetAttribute(0));
                                model.Name = reader.GetAttribute(1);
                                
                                string[] translation = reader.GetAttribute(2).Split(',').ToArray();
                                model.Translation = new Vector3D(double.Parse(translation[0]),double.Parse(translation[1]),double.Parse(translation[2]));

                                string[] rotation = reader.GetAttribute(3).Split(',').ToArray();
                                model.Rotation = new Vector3D(double.Parse(rotation[0]), double.Parse(rotation[1]), double.Parse(rotation[2]));

                                string[] scale = reader.GetAttribute(4).Split(',').ToArray();
                                model.Scale = new Vector3D(double.Parse(scale[0]), double.Parse(scale[1]), double.Parse(scale[2]));

                                model.Filename = reader.GetAttribute(5);
                                model.AnimationFileName = reader.GetAttribute(6);

                                scene.LstModels.Add(model);
                            }
                        }
                    }
                }

                reader.Close();

                CurrentScene = scene;
                FawrekEngine.InitFawrekPtr();
            }
        }

        private void CreateScene(string path)
        {
            XmlWriterSettings settings = new XmlWriterSettings();
            settings.Indent = true;

            XmlWriter writer = XmlWriter.Create(path, settings);

            writer.WriteStartDocument();
            writer.WriteComment("This file is automaticaly generated by the FawrekEngine. Do not edit it.");
            writer.WriteStartElement("MODELS");
            writer.WriteEndElement();
            writer.WriteEndDocument();

            writer.Flush();
            writer.Close();
        }

        public void SaveScene()
        {
            if (CurrentScene != null && !string.IsNullOrEmpty(CurrentScene.Path))
            {
                XmlWriterSettings settings = new XmlWriterSettings();
                settings.Indent = true;

                XmlWriter writer = XmlWriter.Create(CurrentScene.Path, settings);
                writer.WriteStartDocument();
                writer.WriteComment("This file is automaticaly generated by the FawrekEngine. Do not edit it.");
                writer.WriteStartElement("MODELS");

                for (int i = 0; i < CurrentScene.LstModels.Count; i++)
                {
                    Model model = CurrentScene.LstModels[i];

                    writer.WriteStartElement("MODEL");

                    writer.WriteAttributeString("id", model.Id.ToString());
                    writer.WriteAttributeString("name", model.Name);

                    string translation = model.Translation.X.ToString() + "," + model.Translation.Y.ToString() + "," + model.Translation.Z.ToString();
                    writer.WriteAttributeString("translation", translation);

                    string rotation = model.Rotation.X.ToString() + "," + model.Rotation.Y.ToString() + "," + model.Rotation.Z.ToString();
                    writer.WriteAttributeString("rotation", rotation);

                    string scale = model.Scale.X.ToString() + "," + model.Scale.Y.ToString() + "," + model.Scale.Z.ToString();
                    writer.WriteAttributeString("scale", scale);

                    writer.WriteAttributeString("filename", model.Filename);
                    writer.WriteAttributeString("animationfilename", model.AnimationFileName);

                    writer.WriteEndElement();
                }

                writer.WriteEndDocument();
                writer.Flush();
                writer.Close();
            }
        }

        public void CloseScene()
        {
            if (CurrentScene != null && !string.IsNullOrEmpty(CurrentScene.Path))
            {
                FawrekEngine.DisposeFawrekPtr();
                CurrentScene.LstModels.Clear();
                OnClose();
            }
        }
    }
}
